% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_quiz.R
\name{quiz_get_state}
\alias{quiz_get_state}
\alias{quiz_set_state}
\alias{quiz_is_current_correct}
\alias{quiz_is_all_correct}
\alias{quiz_ui_quiz_complete}
\alias{quiz_ui_question}
\title{Manage the states of the quiz}
\usage{
quiz_get_state(store, variable = NULL, state = NULL)

quiz_set_state(store, variable, value, state = NULL)

quiz_is_current_correct(store)

quiz_is_all_correct(store)

quiz_ui_quiz_complete(store, message_correct, message_wrong)

quiz_ui_question(store, ns)
}
\arguments{
\item{store}{a list formatted like in the example}

\item{variable}{one of c('current-question', 'current-answers', 'current-correct-answer', 'next-state', 'current-response')}

\item{state}{one of c('quiz-question-1', ..., 'quiz-question')}
}
\value{

}
\description{
The quiz has states for each question and a final state for once the quiz ends. Only one state can be active at a time and the question text and answers shown depend on what state is active.
}
\details{
These are `get` and `set` functions for retrieving state values and setting values. The states are originally created via a `reactiveValues` call within Shiny server (or `list` outside of Shiny; see example below).

See the post-treatment learning module for a working example.
}
\section{Functions}{
\itemize{
\item \code{quiz_get_state}: a getter function for the state machine

\item \code{quiz_set_state}: a setter function for the state machine

\item \code{quiz_is_current_correct}: check that current-response is correct

\item \code{quiz_is_all_correct}: check that all recorded answers are correct

\item \code{quiz_ui_quiz_complete}: UI to show once the quiz is completed

\item \code{quiz_ui_question}: UI to show for each question
}}

\examples{
\dontrun{
question_1 <- "This is question 1"
question_2 <- "This is question 2"
question_texts <- list(question_1, question_2)
question_prompts <- list(radioButtons(...), radioButtons(...))
correct_answers <- list(c('1a'), c('2b'))
# use shiny::reactiveValues() in lieu of list()
store <- list( 
  state = 'quiz-question-1',
  states = c(paste0('quiz-question-', seq_along(question_texts)), 'quiz-complete'),
  question_texts = question_texts,
  question_prompts = question_prompts,
  correct_answers = correct_answers,
  responses = c('yes', NA, NA)
)
quiz_get_state(store, 'current-question')
}
}
