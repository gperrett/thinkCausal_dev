% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_interactive_table.R
\name{create_interactive_table}
\alias{create_interactive_table}
\title{Create a JavaScript table that has editable cells and checks for the correct input}
\usage{
create_interactive_table(
  .data,
  correct_answers,
  extra_header = NULL,
  extra_header_widths = rep(1, length(extra_header)),
  button = TRUE,
  table_id = NULL,
  ns = NULL
)
}
\arguments{
\item{.data}{a dataframe. Any cells that should require user input should be marked with a "?"}

\item{correct_answers}{a vector of the correct answers that map to the "?" rowwise (left-to-right then top-to-bottom)}

\item{extra_header}{optional. A vector of column names}

\item{extra_header_widths}{required only if extra_header is provided. A vector of column widths that sum to length(extra_header). I.e. 1 = width of one column; 2 = width of two columns, etc.}

\item{button}{logical to inclde clear and submit button only set to false when using for estimands}

\item{table_id}{optional. A string to use as the html ID for the table. If none is provided, then 'table' + random 15 letters is used}

\item{ns}{optional. A function defining the name space. To be used with shiny::NS}
}
\value{
a string of JS and HTML code
}
\description{
Creates a JavaScript table from a dataframe with editable cells where dataframe=='?'. User must input correct answer into those editable cells. Often used to create potential outcomes quizzes.
}
\examples{
.data <- tibble(
  Student = c('Blake', 'Kennedy', 'Jordan', 'Jordan', 'John'), 
  Z = c(1, 1, 0, 0, 0),
  Y1 = c(115, 130, '?', '?', 120),
  Y0 = c('?', '?', 130, 128, 130),
  Y = c(115, 130, 130, 128, 130),
  ITE = c(-6, -5, -2, -8, "?")
 )
correct_answers <- c("121", "135", "127", "120", "5")
extra_header <- c('', 'Treatment', 'Potential Outcomes', 'Observed Outcomes', 'Treatment Effect')
extra_header_widths <- c(1, 1, 2, 1, 1)
html_string <- create_interactive_table(.data, correct_answers, extra_header, extra_header_widths)
# HTML(html_string) within Shiny UI 
# access the user inputs via get_table_values(<table_id>) within Shiny server
}
\author{
Joe Marlo, Junhui Yang
}
